/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { calcScale } from "../../Functions/3dCalc/calcScale";

export function Closet4Doors({
  width = 1,
  height = 1,
  depth = 1,
  isSokol,
  material,
  handleType,
  RightShelvesNumber,
  LeftShelvesNumber,
  isLeftPole,
  isRightPole,
  ...props
}) {
  const defaultDimensions = [1.61, 2.3, 0.59];
  const { nodes, materials } = useGLTF("assets/3dModels/Closet4Doors.glb");
  console.log(nodes);
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.poleLeft.geometry}
        material={materials.chrome}
        position={[0.426, 2.295, 0.3]}
        rotation={[0, 0, -Math.PI / 2]}
      />
      <group
        scale={calcScale(defaultDimensions, [width, height, depth])}
        position={[0, 0, 0]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.leftPanel.geometry}
          material={materials.wood_1}
          position={[0.809, 0.1, 0.3]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.backPanel.geometry}
          material={materials.wood_1}
          position={[0.809, 0.1, 0.3]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.bottomPanel.geometry}
          material={materials.wood_1}
          position={[0.809, 0.1, 0.3]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.rightPanel.geometry}
          material={materials.wood_1}
          position={[0.809, 0.1, 0.3]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.topPanel.geometry}
          material={materials.wood_1}
          position={[0.809, 0.1, 0.3]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.divider.geometry}
          material={materials.wood_1}
          position={[0.809, 0.1, 0.3]}
        />
        {false && (
          <group>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.door2.geometry}
              material={materials.wood_1}
              position={[0.809, 0.1, 0.3]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.door3.geometry}
              material={materials.wood_1}
              position={[0.808, 0.1, 0.3]}
              rotation={[-Math.PI, 0, 0]}
              scale={-1}
            />

            <mesh
              castShadow
              receiveShadow
              geometry={nodes.door1.geometry}
              material={materials.wood_1}
              position={[0.809, 0.1, 0.3]}
              rotation={[-Math.PI, 0, 0]}
              scale={-1}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.door4.geometry}
              material={materials.wood_1}
              position={[0.809, 0.1, 0.3]}
              rotation={[-Math.PI, 0, 0]}
              scale={-1}
            />
          </group>
        )}
      </group>

      <mesh
        castShadow
        receiveShadow
        geometry={nodes.legBackLeft.geometry}
        material={materials["chrome.001"]}
        position={[0.101, 0.05, 0.052]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.legBackRight.geometry}
        material={materials["chrome.001"]}
        position={[1.538, 0.05, 0.052]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.legFrontLeft.geometry}
        material={materials["chrome.001"]}
        position={[0.101, 0.05, 0.512]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.legFrontRight.geometry}
        material={materials["chrome.001"]}
        position={[1.538, 0.05, 0.512]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.shelfLeft.geometry}
        material={materials.wood_1}
        position={[0.408, 1.23, 0.297]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.shelfRight.geometry}
        material={materials.wood_1}
        position={[1.208, 1.23, 0.297]}
      />
      <group
        scale={calcScale(
          [defaultDimensions[0], 1, defaultDimensions[2]],
          [width, 1, depth]
        )}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.sokolBack.geometry}
          material={materials.wood_1}
          position={[0.806, 0.05, 0.008]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.sokolFront.geometry}
          material={materials.wood_1}
          position={[0.806, 0.05, 0.585]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.sokolLeft.geometry}
          material={materials.wood_1}
          position={[0.01, 0.05, 0.296]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.sokolRight.geometry}
          material={materials.wood_1}
          position={[1.601, 0.05, 0.296]}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.poleRight.geometry}
        material={materials.chrome}
        position={[1.226, 2.295, 0.3]}
        rotation={[0, 0, -Math.PI / 2]}
      />
    </group>
  );
}
useGLTF.preload("assets/3dModels/Closet4Doors.glb");
